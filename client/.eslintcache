[{"C:\\projects\\web-services\\client\\src\\index.js":"1","C:\\projects\\web-services\\client\\src\\App.js":"2","C:\\projects\\web-services\\client\\src\\reportWebVitals.js":"3","C:\\projects\\web-services\\client\\src\\pages\\Register.js":"4","C:\\projects\\web-services\\client\\src\\pages\\Home.js":"5","C:\\projects\\web-services\\client\\src\\pages\\Login.js":"6","C:\\projects\\web-services\\client\\src\\components\\Todos.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":863,"mtime":1609940672320,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2991,"mtime":1609940263309,"results":"12","hashOfConfig":"9"},{"size":772,"mtime":1609957500751,"results":"13","hashOfConfig":"9"},{"size":2947,"mtime":1609941553224,"results":"14","hashOfConfig":"9"},{"size":3956,"mtime":1609956722688,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cajylz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\projects\\web-services\\client\\src\\index.js",[],["32","33"],"C:\\projects\\web-services\\client\\src\\App.js",[],"C:\\projects\\web-services\\client\\src\\reportWebVitals.js",[],"C:\\projects\\web-services\\client\\src\\pages\\Register.js",[],"C:\\projects\\web-services\\client\\src\\pages\\Home.js",["34"],"C:\\projects\\web-services\\client\\src\\pages\\Login.js",[],"C:\\projects\\web-services\\client\\src\\components\\Todos.js",["35"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {CredentialsContext} from \"../App\";\r\n\r\nexport default function Todos(){\r\n    const [todos, setTodos] = useState([]);\r\n    const [todoText, setTodoText] = useState('');\r\n    const [credentials] = useContext(CredentialsContext)\r\n\r\n    const handleErrors = (response) => {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    const addTodo = () => {\r\n        const newTodo = {id: todos.length, text:  todoText, checked: true}\r\n        const newTodos = [...todos, newTodo];\r\n        setTodos(newTodos);\r\n        persist(newTodos);\r\n        setTodoText('');\r\n    }\r\n\r\n    const changeHandler = (e) => {\r\n        setTodoText(e.target.value);\r\n    }\r\n\r\n    const toggleTodo = (id) => {\r\n        const newTodos = todos.map((item) => {\r\n            if (item.id === id) {\r\n                item.checked = !item.checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setTodos(newTodos);\r\n        persist(newTodos);\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        const newTodos = todos.filter((item) => item.id !== id);\r\n        setTodos(newTodos);\r\n        persist(newTodos);\r\n    }\r\n\r\n    const persist = (todos) => {\r\n        fetch(`http://localhost:4000/todos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${credentials.username}:${credentials.password}`\r\n            },\r\n            body: JSON.stringify(todos)\r\n        })\r\n            .then(handleErrors)\r\n            .then(() => {})\r\n            .catch((e) => console.log(e));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:4000/todos`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${credentials.username}:${credentials.password}`\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => setTodos(data.todos));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {todos.map((todo) => (\r\n                <div className=\"row\" key={todo.id}>\r\n                    <div className={`card teal lighten-1 ${todo.checked ? 'card--active': 'card--disabled'}`}>\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">{ todo.text }</span>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <a\r\n                            onClick={(e) => {e.preventDefault(); toggleTodo(todo.id)}}\r\n                            href=\"/#\"\r\n                            className=\"card-action-text\">{todo.checked ? 'Завершить': 'Завершено'}</a>\r\n\r\n                            <a\r\n                                onClick={(e) => {e.preventDefault(); removeTodo(todo.id)}}\r\n                                href=\"/#\"\r\n                                className=\"card-action-text\">Удалить</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"input-field col s9\">\r\n                    <input\r\n                    onChange={changeHandler}\r\n                    value={todoText}\r\n                    placeholder=\"Купить молоко\"\r\n                    id=\"first_name\"\r\n                    type=\"text\"\r\n                    className=\"validate\"/>\r\n                </div>\r\n                <div className=\"input-field col s3\">\r\n                    <div\r\n                    onClick={addTodo}\r\n                    disabled={!todoText.length}\r\n                    className=\"waves-effect waves-light btn\">Добавить</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":25,"nodeType":"42","messageId":"43","endLine":8,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":70,"column":8,"nodeType":"46","endLine":70,"endColumn":10,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setCredentials' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'credentials.password' and 'credentials.username'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [credentials.password, credentials.username]",{"range":"53","text":"54"},[2107,2109],"[credentials.password, credentials.username]"]